# docker-compose.yml com Volume Nomeado (Padrão Corrigido)

x-n8n-common-env: &n8n-common-env
  # Conexão com o Banco de Dados (PostgreSQL)
  - DB_TYPE=${DB_TYPE}
  - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
  - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
  - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT}
  - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
  - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
  # Conexão com a Fila (Redis)
  - QUEUE_BULL_REDIS_HOST=${QUEUE_BULL_REDIS_HOST}
  - QUEUE_BULL_REDIS_PORT=${QUEUE_BULL_REDIS_PORT}
  - QUEUE_BULL_REDIS_DB=${QUEUE_BULL_REDIS_DB}
  # Chave de Criptografia
  - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
  # URLs de Acesso
  - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL}
  - WEBHOOK_URL=${WEBHOOK_URL}
  # Configurações de Execução e Ambiente
  - NODE_ENV=${NODE_ENV}
  - EXECUTIONS_MODE=queue
  - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
  - TZ=${TZ}
  # Permissões e Pacotes
  - NODE_FUNCTION_ALLOW_EXTERNAL=${NODE_FUNCTION_ALLOW_EXTERNAL}
  - NODE_FUNCTION_ALLOW_BUILTIN=${NODE_FUNCTION_ALLOW_BUILTIN}
  - N8N_COMMUNITY_PACKAGES_ENABLED=${N8N_COMMUNITY_PACKAGES_ENABLED}
  - N8N_REINSTALL_MISSING_PACKAGES=${N8N_REINSTALL_MISSING_PACKAGES}
  # Limpeza de Dados de Execução
  - EXECUTIONS_DATA_PRUNE=${EXECUTIONS_DATA_PRUNE}
  - EXECUTIONS_DATA_MAX_AGE=${EXECUTIONS_DATA_MAX_AGE}
  # Ajustes Recomendados
  - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
  - N8N_RUNNERS_ENABLED=true
  - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true

services:
  n8n_editor:
    image: witrocha/n8n-axios:1.98.1
    command: start
    user: "1000:1000"
    networks:
      - minha_rede
    environment: *n8n-common-env
    volumes:
      - n8n_data:/home/node/.n8n # <- CORREÇÃO: Usa o volume nomeado 'n8n_data'
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits: { cpus: "0.5", memory: 1224M }
        reservations: { cpus: "0.25", memory: 512M }
      labels:
        - traefik.enable=true
        - traefik.http.routers.n8n_editor.rule=Host(`${N8N_HOST}`)
        - traefik.http.routers.n8n_editor.entrypoints=websecure
        - traefik.http.routers.n8n_editor.tls.certresolver=letsencryptresolver
        - traefik.http.routers.n8n_editor.service=n8n_editor
        - traefik.http.services.n8n_editor.loadbalancer.server.port=5678
        - traefik.http.services.n8n_editor.loadbalancer.passHostHeader=true
        - traefik.http.routers.n8n_editor.middlewares=secure-headers-n8n
        - traefik.http.middlewares.secure-headers-n8n.headers.stsSeconds=31536000
        - traefik.http.middlewares.secure-headers-n8n.headers.stsIncludeSubdomains=true
        - traefik.http.middlewares.secure-headers-n8n.headers.stsPreload=true
        - traefik.http.middlewares.secure-headers-n8n.headers.contentTypeNosniff=true
        - traefik.http.middlewares.secure-headers-n8n.headers.browserXssFilter=true

  n8n_webhook:
    image: witrocha/n8n-axios:1.98.1
    command: webhook
    user: "1000:1000"
    networks:
      - minha_rede
    environment: *n8n-common-env
    volumes:
      - n8n_data:/home/node/.n8n # <- CORREÇÃO: Usa o volume nomeado 'n8n_data'
    deploy:
      mode: replicated
      replicas: 3
      resources:
        limits: { cpus: "0.5", memory: 1024M }
        reservations: { cpus: "0.1", memory: 128M }
      labels:
        - traefik.enable=true
        - traefik.http.routers.n8n_webhook.rule=Host(`${N8N_WEBHOOK_HOST}`)
        - traefik.http.routers.n8n_webhook.entrypoints=websecure
        - traefik.http.routers.n8n_webhook.tls.certresolver=letsencryptresolver
        - traefik.http.routers.n8n_webhook.service=n8n_webhook
        - traefik.http.services.n8n_webhook.loadbalancer.server.port=5678
        - traefik.http.services.n8n_webhook.loadbalancer.passHostHeader=true
        - traefik.http.routers.n8n_webhook.middlewares=secure-headers-n8n

  n8n_worker:
    image: witrocha/n8n-axios:1.98.1
    command: worker --concurrency=10
    user: "1000:1000"
    networks:
      - minha_rede
    environment: *n8n-common-env
    volumes:
      - n8n_data:/home/node/.n8n # <- CORREÇÃO: Usa o volume nomeado 'n8n_data'
    deploy:
      mode: replicated
      replicas: 3
      resources:
        limits: { cpus: "1.5", memory: 3072M }
        reservations: { cpus: "0.1", memory: 256M }
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  minha_rede:
    name: minha_rede
    external: true

# --- CORREÇÃO: Define o volume nomeado para os dados do n8n ---
volumes:
  n8n_data:
    name: n8n_data # Define um nome fixo para o volume